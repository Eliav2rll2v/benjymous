<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.baomidou.mybatis3.mapper.BlogUpdateMapper">


    <update id="updateAgeAndContentByIdIn">
        update t_blog
        set age = #{age,jdbcType=NUMERIC}
        , content = #{content,jdbcType=VARCHAR}
        where id in
        <foreach collection="idList" item="item" open="(" close=")" separator=",">
            #{item,jdbcType=NUMERIC}
        </foreach>
    </update>
    <update id="updateAgeAndContentByIdNotIn">
        update t_blog
        set age = #{age,jdbcType=NUMERIC}
        , content = #{content,jdbcType=VARCHAR}
        where id not in
        <foreach collection="idList" item="item" open="(" close=")" separator=",">
            #{item,jdbcType=NUMERIC}
        </foreach>
    </update>
    <update id="updateAgeAndContentByIdBetween">
update t_blog
 set age = #{age,jdbcType=NUMERIC}
, content = #{content,jdbcType=VARCHAR}
where id between #{beginId,jdbcType=NUMERIC} and #{endId,jdbcType=NUMERIC}
</update>
    <update id="updateAgeAndContentByIdLike">
update t_blog
 set age = #{age,jdbcType=NUMERIC}
, content = #{content,jdbcType=VARCHAR}
where id like #{id,jdbcType=NUMERIC}
</update>
    <update id="updateAgeAndContentByIdNotLike">
update t_blog
 set age = #{age,jdbcType=NUMERIC}
, content = #{content,jdbcType=VARCHAR}
where id not like #{id,jdbcType=NUMERIC}
</update>
    <update id="updateAgeAndContentByIdStartWith">
update t_blog
 set age = #{age,jdbcType=NUMERIC}
, content = #{content,jdbcType=VARCHAR}
where id like CONCAT('%', #{id,jdbcType=NUMERIC})
</update>
    <update id="updateAgeAndContentByIdEndWith">
update t_blog
 set age = #{age,jdbcType=NUMERIC}
, content = #{content,jdbcType=VARCHAR}
where id like CONCAT( #{id,jdbcType=NUMERIC},'%')
</update>
    <update id="updateAgeAndContentByIdContaining">
update t_blog
 set age = #{age,jdbcType=NUMERIC}
, content = #{content,jdbcType=VARCHAR}
where id like CONCAT('%', #{id,jdbcType=NUMERIC},'%')
</update>
    <update id="updateAgeAndContentByIdTrue">
update t_blog
 set age = #{age,jdbcType=NUMERIC}
, content = #{content,jdbcType=VARCHAR}
where id = true
</update>
    <update id="updateAgeAndContentByIdFalse">
update t_blog
 set age = #{age,jdbcType=NUMERIC}
, content = #{content,jdbcType=VARCHAR}
where id = false
</update>
    <update id="updateAgeAndContentByIdIgnoreCase">
update t_blog
 set age = #{age,jdbcType=NUMERIC}
, content = #{content,jdbcType=VARCHAR}
where UPPER(id) = UPPER(#{id,jdbcType=NUMERIC})
</update>
    <update id="updateAgeAndContentByIdGreaterThan">
update t_blog
 set age = #{age,jdbcType=NUMERIC}
, content = #{content,jdbcType=VARCHAR}
where id > #{id,jdbcType=NUMERIC}
</update>
    <update id="updateAgeAndContentByIdGreaterThanEqual">
update t_blog
 set age = #{age,jdbcType=NUMERIC}
, content = #{content,jdbcType=VARCHAR}
where id >= #{id,jdbcType=NUMERIC}
</update>
    <update id="updateAgeAndContentByIdIs">
update t_blog
 set age = #{age,jdbcType=NUMERIC}
, content = #{content,jdbcType=VARCHAR}
where id = #{id,jdbcType=NUMERIC}
</update>
    <update id="updateAgeByIdAndAgeAfter">
update t_blog
 set age = #{age,jdbcType=NUMERIC}
where id = #{id,jdbcType=NUMERIC}
AND age > #{oldAge,jdbcType=NUMERIC}
</update>
</mapper>
