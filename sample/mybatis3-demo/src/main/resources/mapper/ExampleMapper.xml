<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.baomidou.mybatis3.mapper.ExampleMapper">
    <resultMap id="BaseResultMap"
               type="com.baomidou.mybatis3.domain.Blog">
        <id column="id" property="id"/>
        <result column="age" property="age"/>
        <result column="content" property="content"/>
        <result column="title" property="title"/>
        <result column="money" property="money"/>
        <result column="blob_text" property="blobText"/>
    </resultMap>
    <sql id="Base_Column_List">
		id,age,content,title,money
	</sql>
    <select id="selectByIdAndCreateTimeBetweenAndTitleContainingOrderByAge" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_blog
        <where>
            <if test="id != null">
                id = #{id,jdbcType=NUMERIC}
            </if>
            <if test="createTime != null">
                AND createTime between #{beginCreateTime,jdbcType=TIMESTAMP} and #{endCreateTime,jdbcType=TIMESTAMP}
            </if>
            <if test="title != null">
                AND title like CONCAT('%', #{title,jdbcType=VARCHAR},'%')
            </if>
        </where>
        order by age
    </select>
    <select id="selectByAgeAndTitleIn" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_blog
        <where>
            <if test="age != null">
                age = #{age,jdbcType=NUMERIC}
            </if>
            <if test="title != null">
                AND title in
                <foreach collection="titleList" item="item" open="(" close=")" separator=",">
                    #{item,jdbcType=VARCHAR}
                </foreach>
            </if>
        </where>
    </select>
    <select id="selectByAgeAndTitle" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_blog
        <where>
            <if test="age != null">
                age = #{age,jdbcType=NUMERIC}
            </if>
            <if test="title != null">
                AND title = #{title,jdbcType=VARCHAR}
            </if>
        </where>
    </select>
    <select id="selectByAgeAndTitleAndContentBetween" resultMap="BaseResultMap">
        select id ,title ,content ,money ,age ,create_time from t_blog
        <where>
            <if test="age != null">
                age = #{age,jdbcType=NUMERIC}
            </if>
            <if test="title != null">
                AND title = #{title,jdbcType=VARCHAR}
            </if>
            <if test="content != null">
                AND content between #{beginContent,jdbcType=VARCHAR} and #{endContent,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <select id="selectBlogById" resultType="myAliasBlog">
        select
        <include refid="Base_Column_List"/>
        from t_blog
        where id = #{id,jdbcType=NUMERIC}
    </select>
    <update id="updateCreateTimeByCreateTime">
        update t_blog
        set create_time = SYSDATE
        <where>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
        </where>
    </update>
    <update id="updateContentAndCreateTimeAndTitleAndMoneyByIdAndCreateTime">
        update t_blog
        set content = #{content,jdbcType=VARCHAR},
        create_time = SYSDATE,
        title = #{title,jdbcType=VARCHAR},
        money = #{money,jdbcType=DECIMAL}
        <where>
            <if test="id != null">
                id = #{id,jdbcType=NUMERIC}
            </if>
            <if test="createTime != null">
                AND create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
        </where>
    </update>
    <update id="updateBlobTextByIdAndBlobTextIsNull">
        update t_blog
        set blob_text = #{blobText}
        where id = #{id,jdbcType=NUMERIC}
          AND blob_text is null
    </update>
    <update id="updateBlobTextByIdAndBlobTextIn">
        update t_blog
        set blob_text = #{blobText}
        where
        id = #{id,jdbcType=NUMERIC}
        AND blobText in
        <foreach collection="oldblobText" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </update>
    <select id="selectBlobTextAndAgeAndCreateTimeByIdsInOrderByAge" resultMap="BaseResultMap">
        select blob_text, age, create_time
        from t_blog
        where
        ids in
        <foreach collection="ids" item="item" open="(" close=")" separator=",">
            #{item,jdbcType=NUMERIC}
        </foreach>
        order by age
    </select>
    <delete id="delByIdAndAge">
        delete
        from t_blog
        where id = #{id,jdbcType=NUMERIC}
          AND age = #{age,jdbcType=NUMERIC}
    </delete>
    <update id="updateMoneyAndAgeByMoneyAndContent">
        update t_blog
        set money = #{money,jdbcType=DECIMAL},
            age   = #{age,jdbcType=NUMERIC}
        where money = #{oldmoney,jdbcType=DECIMAL}
          AND content = #{content,jdbcType=VARCHAR}
    </update>


</mapper>
