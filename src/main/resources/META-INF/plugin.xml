<idea-plugin url="https://gitee.com/baomidou/mybatis-plus" require-restart="false" allow-bundled-update="true">
    <id>com.baomidou.plugin.idea.mybatisx</id>
    <name>MyBatisX</name>
    <vendor email="jobob@qq.com" url="https://gitee.com/baomidou/MybatisX">MybatisX</vendor>

    <description><![CDATA[
          MybatisX plugin
          Features:
       <ul>
          <li>mapper and xml can jump back and forth</li>
          <li>mybatis.xml,mapper.xml prompt</li>
          <li>mapper and xml support auto prompt like jpa (reference  MybatisCodeHelperPro)</li>
          <li>integrate mybatis generator Gui (copy from free mybatis plugin)</li>
      </ul>

      QQ群号: 829161197
      ]]>
    </description>

    <change-notes><![CDATA[
       <h4>1.3.6</h4>
      <ul>
          <li>fixed some bugs</li>
          <li>fixed advance tip for jpa</li>
          <li>fixed xml generate for multi module</li>
          <li>fixed alias scan for springboot</li>
      </ul>
      <h4>1.3.2</h4>
      <ul>
          <li>fixed some bugs</li>
          <li>Support community version</li>
      </ul>
      <h4>2020.09.03</h4>
      <ul>
          <li>support generate Class from table name</li>
          <li>support two ways of oracle insertBatch</li>
      </ul>
       <h4>2020.08.12</h4>
      <ul>
          <li>mapper and xml support auto prompt like jpa</li>
      </ul>
      <h4>2017.10.20</h4>
      <ul>
          <li>mybatisx-1.0.0</li>
      </ul>
      ]]>
    </change-notes>

    <idea-version since-build="192.0"/>
    <depends>com.intellij.modules.java</depends>
    <depends optional="true" config-file="database.xml">com.intellij.database</depends>
    <!-- support aliases -->
    <depends optional="true" config-file="spring.xml">com.intellij.spring</depends>
    <!-- support aliases -->
    <depends optional="true" config-file="spring-boot.xml">com.intellij.spring.boot</depends>

    <extensions defaultExtensionNs="com.intellij">
        <projectService id="baomidou.TemplatesSettings"
                        serviceImplementation="com.baomidou.plugin.idea.mybatisx.setting.TemplatesSettings"/>
        <!--文件描述-->
        <!-- mapper.xml文件属性提示 -->
        <dom.fileDescription id="baomidou.MapperDescription"
                             implementation="com.baomidou.plugin.idea.mybatisx.dom.description.MapperDescription"/>
        <!-- mybatis配置文件属性提示 -->
        <dom.fileDescription id="baomidou.ConfigurationDescription"
            implementation="com.baomidou.plugin.idea.mybatisx.dom.description.ConfigurationDescription"/>

        <!-- 定义搜索，用来实现通过Mapper接口类搜索实现类时直接跳转至mapper.xml文件 -->
        <definitionsSearch id="baomidou.MapperDefinitionSearch"
                           implementation="com.baomidou.plugin.idea.mybatisx.definitionsearch.MapperDefinitionSearch"/>

        <!--项目服务-->
        <projectService id="baomidou.JavaService" serviceImplementation="com.baomidou.plugin.idea.mybatisx.service.JavaService"/>
        <projectService id="baomidou.AnnotationService" serviceImplementation="com.baomidou.plugin.idea.mybatisx.service.AnnotationService"/>
        <projectService id="baomidou.EditorService" serviceImplementation="com.baomidou.plugin.idea.mybatisx.service.EditorService"/>
        <projectService id="baomidou.AliasFacade" serviceImplementation="com.baomidou.plugin.idea.mybatisx.alias.AliasFacade"/>


        <projectService id="baomidou.MapperLocator" serviceImplementation="com.baomidou.plugin.idea.mybatisx.locator.MapperLocator"/>


        <!--代码行插件，实现代码导航功能-->
        <!-- java 跳转到 xml  -->
        <codeInsight.lineMarkerProvider id="baomidou.MapperLineMarkerProvider" language="JAVA"
                                        implementationClass="com.baomidou.plugin.idea.mybatisx.provider.MapperLineMarkerProvider"/>
        <!-- xml 跳转到 java -->
        <codeInsight.lineMarkerProvider id="baomidou.StatementLineMarkerProvider" language="XML"
                                        implementationClass="com.baomidou.plugin.idea.mybatisx.provider.StatementLineMarkerProvider"/>
        <!-- 在service层注入了mapper对象, 在这个对象进行跳转到 mapper 类-->
        <codeInsight.lineMarkerProvider id="baomidou.InjectionLineMarkerProvider" language="JAVA"
                                        implementationClass="com.baomidou.plugin.idea.mybatisx.provider.InjectionLineMarkerProvider"/>

<!--         设置中的配置 -->
        <applicationConfigurable id="mybatisx.settings" instance="com.baomidou.plugin.idea.mybatisx.setting.MybatisConfigurable"/>



        <!-- xml 标签提示 -->
        <!-- 在mapper.xml内部, 进行智能提示, 例如: #{提示位置} -->
        <completion.contributor id="baomidou.SqlParamCompletionContributor" language="SQL"
                                implementationClass="com.baomidou.plugin.idea.mybatisx.contributor.SqlParamCompletionContributor"
                                order="first"/>
        <!-- jpa规范提示, 在mapper类声明方法提示, 提示字符串完成后, 后续可以根据字符串生成方法参数和XML内容 -->
        <completion.contributor id="baomidou.MapperMethodCompletionContributor" language="JAVA"
                                implementationClass="com.baomidou.plugin.idea.mybatisx.contributor.MapperMethodCompletionContributor"/>


        <!--文件模板组，新建文件选择模板, 这里只是定义一个模板, 在mapper类方法定义完成后, 可以根据这个空模板生成一个文件 -->
        <fileTemplateGroup id="baomidou.MybatisFileTemplateDescriptorFactory"
            implementation="com.baomidou.plugin.idea.mybatisx.template.MybatisFileTemplateDescriptorFactory"/>

        <!--附加的LiveTemplate模板-->
        <defaultLiveTemplatesProvider id="baomidou.SqlLiveTemplateProvider"
                                      implementation="com.baomidou.plugin.idea.mybatisx.template.SqlLiveTemplateProvider"/>
        <!-- Mapper类 重命名 -->
        <refactoring.elementListenerProvider id="baomidou.MapperRefactoringProvider"
            implementation="com.baomidou.plugin.idea.mybatisx.refactoring.MapperRefactoringProvider"/>

        <!-- 语法校验，让没有生成代码的方法产生错误 -->
        <localInspection language="JAVA" shortName="MybatisXMapperMethodInspection"
                         id="baomidou.MybatisMapperMethodInspection"
                         displayName="Mapper method inspection"
                         groupName="Mybatis" enabledByDefault="true" level="ERROR"
                         implementationClass="com.baomidou.plugin.idea.mybatisx.inspection.MapperMethodInspection"/>
        <localInspection language="XML" shortName="MybatisXMapperXmlInspection"
                         enabledByDefault="true"
                         level="ERROR"
                         id="baomidou.MybatisMapperXmlInspection"
                         displayName="Mapper xml inspection"
                         groupName="Mybatis"
                         implementationClass="com.baomidou.plugin.idea.mybatisx.inspection.MapperXmlInspection"/>

        <!--提示动作 start-->
        <!-- 生成参数注解 @Param -->
        <intentionAction id="baomidou.GenerateParamAnnotationIntention">
            <className>com.baomidou.plugin.idea.mybatisx.intention.GenerateParamAnnotationIntention</className>
        </intentionAction>
        <!-- 通过方法名生成对应的 查询语句 -->
        <intentionAction id="baomidou.GenerateStatementIntention">
            <className>com.baomidou.plugin.idea.mybatisx.intention.GenerateStatementIntention</className>
        </intentionAction>
        <!-- 生成mybatis mapper.xml文件 -->
        <intentionAction order="first" id="baomidou.GenerateMapperIntention">
            <className>com.baomidou.plugin.idea.mybatisx.intention.GenerateMapperIntention</className>
        </intentionAction>

        <!-- 根据jpa名字生成方法和xml文件内容 -->
        <intentionAction id="baomidou.GenerateMapperMethodSmartJpaAction">
            <className>com.baomidou.plugin.idea.mybatisx.intention.GenerateSmartJpaAction</className>
        </intentionAction>

        <intentionAction id="baomidou.GenerateMapperMethodSmartAdvanceJpaAction">
            <className>com.baomidou.plugin.idea.mybatisx.intention.GenerateSmartJpaAdvanceAction</className>
        </intentionAction>
        <!--提示动作 end-->

        <!-- mybatis的xml和mapper类 文件图标都改成一只鸟-->
        <iconProvider id="baomidou.XmlAndMapperIconProvider"  implementation="com.baomidou.plugin.idea.mybatisx.provider.XmlAndMapperIconProvider"/>



        <!-- mapper.xml文件 #{} 区域的引用跳转 -->
        <psi.referenceContributor id="hashMarkerReferenceContributor"
                                  implementation="com.baomidou.plugin.idea.mybatisx.reference.ContextHashMarkReferenceContributor"/>
    </extensions>

</idea-plugin>
